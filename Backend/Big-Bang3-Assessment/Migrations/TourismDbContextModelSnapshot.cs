// <auto-generated />
using System;
using Big_Bang3_Assessment.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Big_Bang3_Assessment.Migrations
{
    [DbContext(typeof(TourismDbContext))]
    partial class TourismDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Big_Bang3_Assessment.Model.AccommodationDetail", b =>
                {
                    b.Property<int>("AccommodationDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccommodationDetailId"));

                    b.Property<int?>("Agency_Id")
                        .HasColumnType("int");

                    b.Property<string>("Food")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hotel_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccommodationDetailId");

                    b.HasIndex("Agency_Id");

                    b.ToTable("accommodations");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.AdminPost", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("PlaceImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("adminRegisterAdmin_Id")
                        .HasColumnType("int");

                    b.Property<string>("place_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("adminRegisterAdmin_Id");

                    b.ToTable("AdminPost");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.AdminRegister", b =>
                {
                    b.Property<int>("Admin_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Admin_Id"));

                    b.Property<string>("Admin_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Admin_Id");

                    b.ToTable("adminRegisters");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.Agency", b =>
                {
                    b.Property<int>("Agency_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Agency_Id"));

                    b.Property<int?>("AdminRegisterAdmin_Id")
                        .HasColumnType("int");

                    b.Property<string>("Agency_Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agency_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agency_Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number_Of_Days")
                        .HasColumnType("int");

                    b.Property<int>("Offer_For_Day")
                        .HasColumnType("int");

                    b.Property<string>("TourImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("adminPostid")
                        .HasColumnType("int");

                    b.Property<int?>("agentRegisterAgent_Id")
                        .HasColumnType("int");

                    b.Property<int>("rate_for_day")
                        .HasColumnType("int");

                    b.Property<string>("tour_place")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Agency_Id");

                    b.HasIndex("AdminRegisterAdmin_Id");

                    b.HasIndex("adminPostid");

                    b.HasIndex("agentRegisterAgent_Id");

                    b.ToTable("agencies");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.AgentRegister", b =>
                {
                    b.Property<int>("Agent_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Agent_Id"));

                    b.Property<int?>("AdminRegisterAdmin_Id")
                        .HasColumnType("int");

                    b.Property<string>("Agent_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agent_Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Agent_Id");

                    b.HasIndex("AdminRegisterAdmin_Id");

                    b.ToTable("agentRegisters");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.Booking", b =>
                {
                    b.Property<int>("Booking_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Booking_Id"));

                    b.Property<int?>("Agency_Id")
                        .HasColumnType("int");

                    b.Property<string>("Customer_Date_Of_Booking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("User_Id")
                        .HasColumnType("int");

                    b.Property<int>("amount_for_childer")
                        .HasColumnType("int");

                    b.Property<int>("amount_for_person")
                        .HasColumnType("int");

                    b.Property<int>("booking_amount")
                        .HasColumnType("int");

                    b.Property<int>("no_of_childer")
                        .HasColumnType("int");

                    b.Property<int>("no_of_perons")
                        .HasColumnType("int");

                    b.HasKey("Booking_Id");

                    b.HasIndex("Agency_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.FeedBack", b =>
                {
                    b.Property<int>("FeedBack_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedBack_id"));

                    b.Property<int?>("Agency_Id")
                        .HasColumnType("int");

                    b.Property<string>("FeedBack_area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FeedBack_rating")
                        .HasColumnType("int");

                    b.Property<int?>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("FeedBack_id");

                    b.HasIndex("Agency_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("feedBacks");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.User", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_Id"));

                    b.Property<string>("User_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.AccommodationDetail", b =>
                {
                    b.HasOne("Big_Bang3_Assessment.Model.Agency", "agency")
                        .WithMany("accommodationDetails")
                        .HasForeignKey("Agency_Id");

                    b.Navigation("agency");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.AdminPost", b =>
                {
                    b.HasOne("Big_Bang3_Assessment.Model.AdminRegister", "adminRegister")
                        .WithMany("adminPosts")
                        .HasForeignKey("adminRegisterAdmin_Id");

                    b.Navigation("adminRegister");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.Agency", b =>
                {
                    b.HasOne("Big_Bang3_Assessment.Model.AdminRegister", null)
                        .WithMany("agencies")
                        .HasForeignKey("AdminRegisterAdmin_Id");

                    b.HasOne("Big_Bang3_Assessment.Model.AdminPost", "adminPost")
                        .WithMany("agencies")
                        .HasForeignKey("adminPostid");

                    b.HasOne("Big_Bang3_Assessment.Model.AgentRegister", "agentRegister")
                        .WithMany("agencies")
                        .HasForeignKey("agentRegisterAgent_Id");

                    b.Navigation("adminPost");

                    b.Navigation("agentRegister");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.AgentRegister", b =>
                {
                    b.HasOne("Big_Bang3_Assessment.Model.AdminRegister", "AdminRegister")
                        .WithMany()
                        .HasForeignKey("AdminRegisterAdmin_Id");

                    b.Navigation("AdminRegister");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.Booking", b =>
                {
                    b.HasOne("Big_Bang3_Assessment.Model.Agency", "agency")
                        .WithMany("bookings")
                        .HasForeignKey("Agency_Id");

                    b.HasOne("Big_Bang3_Assessment.Model.User", "user")
                        .WithMany("bookings")
                        .HasForeignKey("User_Id");

                    b.Navigation("agency");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.FeedBack", b =>
                {
                    b.HasOne("Big_Bang3_Assessment.Model.Agency", "agency")
                        .WithMany("feedBacks")
                        .HasForeignKey("Agency_Id");

                    b.HasOne("Big_Bang3_Assessment.Model.User", "user")
                        .WithMany("feedBacks")
                        .HasForeignKey("User_Id");

                    b.Navigation("agency");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.AdminPost", b =>
                {
                    b.Navigation("agencies");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.AdminRegister", b =>
                {
                    b.Navigation("adminPosts");

                    b.Navigation("agencies");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.Agency", b =>
                {
                    b.Navigation("accommodationDetails");

                    b.Navigation("bookings");

                    b.Navigation("feedBacks");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.AgentRegister", b =>
                {
                    b.Navigation("agencies");
                });

            modelBuilder.Entity("Big_Bang3_Assessment.Model.User", b =>
                {
                    b.Navigation("bookings");

                    b.Navigation("feedBacks");
                });
#pragma warning restore 612, 618
        }
    }
}
